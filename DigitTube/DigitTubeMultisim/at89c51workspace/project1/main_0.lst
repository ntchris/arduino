

HI-TECH Software 8051 Macro Assembler V9.60                                Page 1
                                                       Fri Apr 22 23:15:27 2016

     1                           	psect	idata,class=DATA,space=1,limit=080h
     2                           	psect	irdata,class=DATA,limit=080h
     3                           	global	stack_internal
     4                           	psect	code,class=CODE
     5                           	psect	code
     6                           	global	_DIG_CODE
     7  000F5                     _DIG_CODE:
     8  000F5  40                 	db	(64)
     9  000F6  79                 	db	(121)
    10  000F7  24                 	db	(36)
    11  000F8  30                 	db	(48)
    12  000F9  19                 	db	(25)
    13  000FA  12                 	db	(18)
    14  000FB  02                 	db	(2)
    15  000FC  78                 	db	(120)
    16  000FD  00                 	db	(0)
    17  000FE  10                 	db	(16)
    18                           	global	_activeDigitN
    19                           	signat	_activeDigitN,4216
    20                           	psect	text,class=CODE
    21                           	psect	text
    22                           	file	"H:\µç×Ó¼¼~1\MCU51\DIGITT~2\AT89C5~1\proje
                                 ct1\main.c"
    23                           	line	30
    24  00102                     _activeDigitN:
    25  00102  80 33              	j	f1431
    26  00104                     f1430:
    27                           ;main.c: 29: void activeDigitN(int n)
    28                           
    29                           ;main.c: 30: {
    30                           
    31                           ;main.c: 31: switch(n)
    32                           
    33                           ;	var   _n assigned to ?a_activeDigitN+0
    34                           ;_n stored from WR2
    35  00104  8C 20              	mov	?a_activeDigitN+0,r4
    36  00106  8D 21              	mov	?a_activeDigitN+0+1,r5
    37                           	line	31
    38  00108  80 12              	jmp	l4
    39                           ;main.c: 32: {
    40                           
    41                           ;main.c: 33: case 1: P10=0;break;
    42                           
    43                           	line	33
    44  0010A                     l5:
    45  0010A  C2 90              	clr	p1.0
    46  0010C  80 28              	jmp	l3
    47                           ;main.c: 34: case 2: P11=0;break;
    48                           
    49                           	line	34
    50  0010E                     l6:
    51  0010E  C2 91              	clr	p1.1
    52  00110  80 24              	jmp	l3
    53                           ;main.c: 35: case 3: P12=0;break;
    54                           
    55                           	line	35
    56  00112                     l7:
    57  00112  C2 92              	clr	p1.2
    58  00114  80 20              	jmp	l3
    59                           ;main.c: 36: case 4: P13=0;break;
    60                           
    61                           	line	36
    62  00116                     l8:
    63  00116  C2 93              	clr	p1.3
    64  00118  80 1C              	jmp	l3
    65                           ;main.c: 37: }
    66                           
    67                           	line	37
    68  0011A  80 1A              	jmp	l3
    69                           	line	31
    70  0011C                     l4:
    71  0011C  A8 20              	mov	r0,?a_activeDigitN+0
    72  0011E  A9 21              	mov	r1,?a_activeDigitN+0+1
    73  00120  80 0F              	j	l30000
    74  00122                     l30001:
    75  00122  E9                 	mov	a,r1
    76  00123  14                 	dec	a
    77  00124  60 E4              	bz	l5
    78  00126  14                 	dec	a
    79  00127  60 E5              	bz	l6
    80  00129  14                 	dec	a
    81  0012A  60 E6              	bz	l7
    82  0012C  14                 	dec	a
    83  0012D  60 E7              	bz	l8
    84  0012F  80 05              	j	l3
    85  00131                     l30000:
    86  00131  E8                 	mov	a,r0
    87  00132  60 EE              	bz	l30001
    88  00134  80 00              	j	l3
    89                           
    90                           	line	37
    91  00136                     l3:
    92                           ;main.c: 38: }
    93                           
    94                           	line	38
    95  00136                     l2:
    96  00136  22                 	ret
    97  00137                     f1431:
    98  00137  80 CB              	j	f1430
    99                           	FNSIZE	_activeDigitN,2,0
   100                           	global	?a_activeDigitN
   101  0000                     f1432	equ	0
   102                           	global	_sleep100ms
   103                           	signat	_sleep100ms,88
   104                           	line	41
   105  00139                     _sleep100ms:
   106  00139  80 2C              	j	f1441
   107  0013B                     f1440:
   108                           ;main.c: 40: void sleep100ms(void)
   109                           
   110                           ;main.c: 41: {
   111                           
   112                           ;	var   _i assigned to ?a_sleep100ms+0
   113                           ;main.c: 42: unsigned int i;
   114                           
   115                           ;main.c: 43: for (i = 0; i < 7000; i++)
   116                           
   117                           	line	43
   118  0013B  E4                 	clr	a
   119  0013C  F5 20              	mov	?a_sleep100ms+0,a
   120  0013E  F5 21              	mov	?a_sleep100ms+0+1,a
   121  00140  E5 21              	mov	a,?a_sleep100ms+0+1
   122  00142  24 A8              	add	a,#low -(7000)
   123  00144  E5 20              	mov	a,?a_sleep100ms+0
   124  00146  34 E4              	addc	a,#high -(7000)
   125  00148  50 02              	bnc	u11
   126  0014A  80 02              	jmp	u10
   127  0014C                     u11:
   128  0014C  80 02              	jmp	l10
   129  0014E                     u10:
   130  0014E  80 16              	jmp	l11
   131                           	line	44
   132  00150                     l10:
   133                           ;main.c: 44: {
   134                           
   135                           ;main.c: 45: ;
   136                           
   137                           	line	43
   138  00150  05 21              	inc	?a_sleep100ms+0+1
   139  00152  E5 21              	mov	a,?a_sleep100ms+0+1
   140  00154  70 02              	jnz	u20
   141  00156  05 20              	inc	?a_sleep100ms+0
   142  00158                     u20:
   143  00158  E5 21              	mov	a,?a_sleep100ms+0+1
   144  0015A  24 A8              	add	a,#low -(7000)
   145  0015C  E5 20              	mov	a,?a_sleep100ms+0
   146  0015E  34 E4              	addc	a,#high -(7000)
   147  00160  50 02              	bnc	u31
   148  00162  80 02              	jmp	u30
   149  00164                     u31:
   150  00164  80 EA              	jmp	l10
   151  00166                     u30:
   152  00166                     l11:
   153                           ;main.c: 46: }
   154                           
   155                           ;main.c: 47: }
   156                           
   157                           	line	47
   158  00166                     l9:
   159  00166  22                 	ret
   160  00167                     f1441:
   161  00167  80 D2              	j	f1440
   162                           	FNSIZE	_sleep100ms,2,0
   163                           	global	?a_sleep100ms
   164  0000                     f1442	equ	0
   165                           	global	_sleep1sec
   166                           	signat	_sleep1sec,88
   167                           	line	49
   168  00169                     _sleep1sec:
   169  00169  80 2F              	j	f1451
   170  0016B                     f1450:
   171                           ;main.c: 49: void sleep1sec (void) {
   172                           
   173                           ;	var   _i assigned to ?a_sleep1sec+0
   174                           ;main.c: 50: unsigned int i;
   175                           
   176                           ;main.c: 51: for (i = 0; i < 10; i++)
   177                           
   178                           	line	51
   179  0016B  E4                 	clr	a
   180  0016C  F5 20              	mov	?a_sleep1sec+0,a
   181  0016E  F5 21              	mov	?a_sleep1sec+0+1,a
   182  00170  E5 21              	mov	a,?a_sleep1sec+0+1
   183  00172  24 F6              	add	a,#low -(10)
   184  00174  E5 20              	mov	a,?a_sleep1sec+0
   185  00176  34 FF              	addc	a,#high -(10)
   186  00178  50 02              	bnc	u41
   187  0017A  80 02              	jmp	u40
   188  0017C                     u41:
   189  0017C  80 02              	jmp	l14
   190  0017E                     u40:
   191  0017E  80 19              	jmp	l15
   192                           	line	52
   193  00180                     l14:
   194                           ;main.c: 52: {
   195                           
   196                           ;main.c: 53: sleep100ms();
   197                           
   198                           	FNCALL	_sleep1sec,_sleep100ms
   199                           	line	53
   200  00180  12 0139            	lcall	_sleep100ms
   201                           	line	51
   202  00183  05 21              	inc	?a_sleep1sec+0+1
   203  00185  E5 21              	mov	a,?a_sleep1sec+0+1
   204  00187  70 02              	jnz	u50
   205  00189  05 20              	inc	?a_sleep1sec+0
   206  0018B                     u50:
   207  0018B  E5 21              	mov	a,?a_sleep1sec+0+1
   208  0018D  24 F6              	add	a,#low -(10)
   209  0018F  E5 20              	mov	a,?a_sleep1sec+0
   210  00191  34 FF              	addc	a,#high -(10)
   211  00193  50 02              	bnc	u61
   212  00195  80 02              	jmp	u60
   213  00197                     u61:
   214  00197  80 E7              	jmp	l14
   215  00199                     u60:
   216  00199                     l15:
   217                           ;main.c: 54: }
   218                           
   219                           ;main.c: 55: }
   220                           
   221                           	line	55
   222  00199                     l13:
   223  00199  22                 	ret
   224  0019A                     f1451:
   225  0019A  80 CF              	j	f1450
   226                           	FNSIZE	_sleep1sec,2,0
   227                           	global	?a_sleep1sec
   228  0000                     f1452	equ	0
   229                           ;	param _position assigned to r5 on entry
   230                           ;	param _digit assigned to r3 on entry
   231                           	global	_showDigitInPositionN
   232                           	signat	_showDigitInPositionN,8312
   233                           	line	61
   234  0019C                     _showDigitInPositionN:
   235  0019C  80 1F              	j	f1461
   236  0019E                     f1460:
   237                           ;main.c: 60: void showDigitInPositionN(unsigned 
                                 char position , unsigned char digit)
   238                           
   239                           ;main.c: 61: {
   240                           
   241                           ;	var   _newValue assigned to ?a_showDigitInPosi
                                 tionN+0
   242                           ;main.c: 64: unsigned char newValue;
   243                           
   244                           ;main.c: 65: newValue = (0B1000 >> (position-1))
                                 ;
   245                           
   246                           	line	65
   247  0019E  ED                 	mov	a,r5
   248  0019F  24 FF              	add	a,#-1
   249  001A1  FA                 	mov	r2,a
   250  001A2  74 08              	mov	a,#08h
   251  001A4  BA 00 02           	cjne	r2,#0,u74
   252  001A7  80 04              	jmp	u71
   253  001A9                     u74:
   254  001A9  C3                 	clr	c
   255  001AA  13                 	rrc	a
   256  001AB  DA FC              	djnz	r2,u74
   257  001AD                     u71:
   258  001AD  F5 22              	mov	?a_showDigitInPositionN+0,a
   259                           ;main.c: 66: P1=newValue;
   260                           
   261                           	line	66
   262  001AF  85 22  90          	mov	090h,?a_showDigitInPositionN+0
   263                           ;main.c: 67: P1=8;
   264                           
   265                           	line	67
   266  001B2  75 90 08           	mov	090h,#8
   267                           ;main.c: 68: P0 = DIG_CODE[digit];
   268                           
   269                           	line	68
   270  001B5  EB                 	mov	a,r3
   271  001B6  90 00F5            	mov	dptr,#_DIG_CODE
   272  001B9  93                 	movc	a,@a+dptr
   273  001BA  F5 80              	mov	080h,a
   274                           ;main.c: 71: }
   275                           
   276                           	line	71
   277  001BC                     l17:
   278  001BC  22                 	ret
   279  001BD                     f1461:
   280  001BD  80 DF              	j	f1460
   281                           	FNSIZE	_showDigitInPositionN,1,0
   282                           	global	?a_showDigitInPositionN
   283  0000                     f1462	equ	0
   284                           ;	param _digit assigned to r4/r5 on entry
   285                           	global	_showDigit
   286                           	signat	_showDigit,4216
   287                           	line	77
   288  001BF                     _showDigit:
   289  001BF  80 62              	j	f1471
   290  001C1                     f1470:
   291                           ;main.c: 76: void showDigit(int digit)
   292                           
   293                           ;main.c: 77: {
   294                           
   295                           ;	var   _num assigned to ?a_showDigit+0
   296                           ;main.c: 78: unsigned char num=0;
   297                           
   298                           	line	78
   299  001C1  75 20  00          	mov	?a_showDigit+0,#0
   300                           ;	var   _tenMod assigned to ?a_showDigit+1
   301                           ;main.c: 79: int tenMod=1;
   302                           
   303                           	line	79
   304  001C4  75 21  00          	mov	?a_showDigit+1,#high(1)
   305  001C7  75 22  01          	mov	?a_showDigit+1+1,#low(1)
   306                           ;	var   _i assigned to ?a_showDigit+3
   307                           ;main.c: 80: int i;
   308                           
   309                           ;main.c: 81: for(i=1;i<=4;i++)
   310                           
   311                           	line	81
   312  001CA  75 23  00          	mov	?a_showDigit+3,#high(1)
   313  001CD  75 24  01          	mov	?a_showDigit+3+1,#low(1)
   314                           ;	var   _digit assigned to ?a_showDigit+5
   315                           ;_digit stored from WR2
   316                           	line	80
   317  001D0  8C 25              	mov	?a_showDigit+5,r4
   318  001D2  8D 26              	mov	?a_showDigit+5+1,r5
   319                           	line	81
   320  001D4  E5 24              	mov	a,?a_showDigit+3+1
   321  001D6  24 FB              	add	a,#low -(5)
   322  001D8  E5 23              	mov	a,?a_showDigit+3
   323  001DA  64 80              	xrl	a,#80h
   324  001DC  34 7F              	addc	a,#(high -(5))xor 80h
   325  001DE  50 02              	bnc	u81
   326  001E0  80 02              	jmp	u80
   327  001E2                     u81:
   328  001E2  80 02              	jmp	l19
   329  001E4                     u80:
   330  001E4  80 3C              	jmp	l20
   331                           	line	82
   332  001E6                     l19:
   333                           ;main.c: 82: {
   334                           
   335                           ;main.c: 83: num=digit/tenMod;
   336                           
   337                           	line	83
   338  001E6  AC 21              	mov	r4,?a_showDigit+1
   339  001E8  AD 22              	mov	r5,?a_showDigit+1+1
   340  001EA  AA 25              	mov	r2,?a_showDigit+5
   341  001EC  AB 26              	mov	r3,?a_showDigit+5+1
   342                           	global	awdiv
   343  001EE  12 0093            	lcall	awdiv
   344  001F1  EB                 	mov	a,r3
   345  001F2  F5 20              	mov	?a_showDigit+0,a
   346                           ;main.c: 85: showDigitInPositionN(num, i);
   347                           
   348                           	FNCALL	_showDigit,_showDigitInPositionN
   349                           	line	85
   350  001F4  AB 24              	mov	r3,?a_showDigit+3+1
   351  001F6  AD 20              	mov	r5,?a_showDigit+0
   352  001F8  12 019C            	lcall	_showDigitInPositionN
   353                           
   354                           ;main.c: 86: tenMod*=10;
   355                           
   356                           	line	86
   357  001FB  7C 00              	mov	r4,#high (10)
   358  001FD  7D 0A              	mov	r5,#low (10)
   359  001FF  AA 21              	mov	r2,?a_showDigit+1
   360  00201  AB 22              	mov	r3,?a_showDigit+1+1
   361                           	global	awmul
   362  00203  12 00C3            	lcall	awmul
   363  00206  8A 21              	mov	?a_showDigit+1,r2
   364  00208  8B 22              	mov	?a_showDigit+1+1,r3
   365                           	line	81
   366  0020A  05 24              	inc	?a_showDigit+3+1
   367  0020C  E5 24              	mov	a,?a_showDigit+3+1
   368  0020E  70 02              	jnz	u90
   369  00210  05 23              	inc	?a_showDigit+3
   370  00212                     u90:
   371  00212  E5 24              	mov	a,?a_showDigit+3+1
   372  00214  24 FB              	add	a,#low -(5)
   373  00216  E5 23              	mov	a,?a_showDigit+3
   374  00218  64 80              	xrl	a,#80h
   375  0021A  34 7F              	addc	a,#(high -(5))xor 80h
   376  0021C  50 02              	bnc	u101
   377  0021E  80 02              	jmp	u100
   378  00220                     u101:
   379  00220  80 C4              	jmp	l19
   380  00222                     u100:
   381  00222                     l20:
   382                           ;main.c: 87: }
   383                           
   384                           ;main.c: 89: }
   385                           
   386                           	line	89
   387  00222                     l18:
   388  00222  22                 	ret
   389  00223                     f1471:
   390  00223  80 9C              	j	f1470
   391                           	FNSIZE	_showDigit,7,0
   392                           	global	?a_showDigit
   393  0000                     f1472	equ	0
   394                           	global	_loopAllDigits
   395                           	signat	_loopAllDigits,88
   396                           	line	93
   397  00225                     _loopAllDigits:
   398  00225  80 3D              	j	f1481
   399  00227                     f1480:
   400                           ;main.c: 92: void loopAllDigits(void)
   401                           
   402                           ;main.c: 93: {
   403                           
   404                           ;	var   _i assigned to ?a_loopAllDigits+0
   405                           ;	var   _arraySize assigned to ?a_loopAllDigits+
                                 2
   406                           ;main.c: 94: unsigned int i;
   407                           
   408                           ;main.c: 96: int arraySize = sizeof(DIG_CODE);
   409                           
   410                           	line	96
   411  00227  75 22  00          	mov	?a_loopAllDigits+2,#high(10)
   412  0022A  75 23  0A          	mov	?a_loopAllDigits+2+1,#low(10)
   413                           ;main.c: 97: while (1)
   414                           
   415                           	line	97
   416  0022D                     l24:
   417                           ;main.c: 98: {
   418                           
   419                           ;main.c: 99: for (i=0; i< arraySize; i++)
   420                           
   421                           	line	99
   422  0022D  E4                 	clr	a
   423  0022E  F5 20              	mov	?a_loopAllDigits+0,a
   424  00230  F5 21              	mov	?a_loopAllDigits+0+1,a
   425  00232  80 1B              	jmp	l29
   426                           	line	100
   427  00234                     l26:
   428                           ;main.c: 100: {
   429                           
   430                           ;main.c: 101: P0 = DIG_CODE[i];
   431                           
   432                           	line	101
   433  00234  E5 21              	mov	a,?a_loopAllDigits+0+1
   434  00236  24 F5              	add	a,#low(_DIG_CODE)
   435  00238  F5 82              	mov	dpl,a
   436  0023A  E5 20              	mov	a,?a_loopAllDigits+0
   437  0023C  34 00              	addc	a,#high(_DIG_CODE)
   438  0023E  F5 83              	mov	dph,a
   439  00240  E4                 	clr	a
   440  00241  93                 	movc	a,@a+dptr
   441  00242  F5 80              	mov	080h,a
   442                           ;main.c: 102: sleep100ms();
   443                           
   444                           	FNCALL	_loopAllDigits,_sleep100ms
   445                           	line	102
   446  00244  12 0139            	lcall	_sleep100ms
   447                           	line	99
   448  00247  05 21              	inc	?a_loopAllDigits+0+1
   449  00249  E5 21              	mov	a,?a_loopAllDigits+0+1
   450  0024B  70 02              	jnz	u110
   451  0024D  05 20              	inc	?a_loopAllDigits+0
   452  0024F                     u110:
   453  0024F                     l29:
   454  0024F  E5 22              	mov	a,?a_loopAllDigits+2
   455  00251  B5 20  07          	cbne	a,?a_loopAllDigits+0,u122
   456  00254  E5 23              	mov	a,?a_loopAllDigits+2+1
   457  00256  B5 21  02          	cbne	a,?a_loopAllDigits+0+1,u122
   458  00259  80 06              	jmp	u120
   459  0025B                     u122:
   460  0025B  50 02              	bnc	u121
   461  0025D  80 02              	jmp	u120
   462  0025F                     u121:
   463  0025F  80 D3              	jmp	l26
   464  00261                     u120:
   465  00261                     l27:
   466                           	line	104
   467  00261                     l23:
   468                           	line	97
   469  00261  80 CA              	jmp	l24
   470  00263                     l25:
   471                           ;main.c: 103: }
   472                           
   473                           ;main.c: 104: }
   474                           
   475                           ;main.c: 105: }
   476                           
   477                           	line	105
   478  00263                     l22:
   479  00263  22                 	ret
   480  00264                     f1481:
   481  00264  80 C1              	j	f1480
   482                           	FNSIZE	_loopAllDigits,4,0
   483                           	global	?a_loopAllDigits
   484  0000                     f1482	equ	0
   485                           	global	_main
   486                           	signat	_main,88
   487                           	line	108
   488  00266                     _main:
   489  00266  80 0F              	j	f1491
   490  00268                     f1490:
   491                           ;main.c: 108: void main (void) {
   492                           
   493                           ;	var   _i assigned to ?a_main+0
   494                           ;main.c: 110: int i=0;
   495                           
   496                           	line	110
   497  00268  E4                 	clr	a
   498  00269  F5 20              	mov	?a_main+0,a
   499  0026B  F5 21              	mov	?a_main+0+1,a
   500                           ;main.c: 121: while(1)
   501                           
   502                           	line	121
   503  0026D                     l32:
   504                           ;main.c: 122: {
   505                           
   506                           ;main.c: 124: showDigitInPositionN(1,8);
   507                           
   508                           	FNCALL	_main,_showDigitInPositionN
   509                           	line	124
   510  0026D  7B 08              	mov	r3,#8
   511  0026F  7D 01              	mov	r5,#1
   512  00271  12 019C            	lcall	_showDigitInPositionN
   513                           
   514                           	line	125
   515  00274                     l31:
   516                           	line	121
   517  00274  80 F7              	jmp	l32
   518  00276                     l33:
   519                           ;main.c: 125: }
   520                           
   521                           ;main.c: 127: }
   522                           
   523                           	line	127
   524  00276                     l30:
   525  00276  22                 	ret
   526  00277                     f1491:
   527  00277  80 EF              	j	f1490
   528                           	FNSIZE	_main,2,0
   529                           	global	?a_main
   530  0000                     f1492	equ	0
   531  0000                     _A10	equ	162
   532  0000                     _A11	equ	163
   533  0000                     _A12	equ	164
   534  0000                     _A13	equ	165
   535  0000                     _A14	equ	166
   536  0000                     _A15	equ	167
   537  0000                     _A8	equ	160
   538  0000                     _A9	equ	161
   539  0000                     _AC	equ	214
   540  0000                     _ACC0	equ	224
   541  0000                     _ACC1	equ	225
   542  0000                     _ACC2	equ	226
   543  0000                     _ACC3	equ	227
   544  0000                     _ACC4	equ	228
   545  0000                     _ACC5	equ	229
   546  0000                     _ACC6	equ	230
   547  0000                     _ACC7	equ	231
   548  0000                     _AD0	equ	128
   549  0000                     _AD1	equ	129
   550  0000                     _AD2	equ	130
   551  0000                     _AD3	equ	131
   552  0000                     _AD4	equ	132
   553  0000                     _AD5	equ	133
   554  0000                     _AD6	equ	134
   555  0000                     _AD7	equ	135
   556  0000                     _B0	equ	240
   557  0000                     _B1	equ	241
   558  0000                     _B2	equ	242
   559  0000                     _B3	equ	243
   560  0000                     _B4	equ	244
   561  0000                     _B5	equ	245
   562  0000                     _B6	equ	246
   563  0000                     _B7	equ	247
   564  0000                     _CY	equ	215
   565  0000                     _EA	equ	175
   566  0000                     _ES	equ	172
   567  0000                     _ET0	equ	169
   568  0000                     _ET1	equ	171
   569  0000                     _EX0	equ	168
   570  0000                     _EX1	equ	170
   571  0000                     _F0	equ	213
   572  0000                     _IE0	equ	137
   573  0000                     _IE1	equ	139
   574  0000                     _INT0	equ	178
   575  0000                     _INT1	equ	179
   576  0000                     _IT0	equ	136
   577  0000                     _IT1	equ	138
   578  0000                     _OV	equ	210
   579  0000                     _P	equ	208
   580  0000                     _P00	equ	128
   581  0000                     _P01	equ	129
   582  0000                     _P02	equ	130
   583  0000                     _P03	equ	131
   584  0000                     _P04	equ	132
   585  0000                     _P05	equ	133
   586  0000                     _P06	equ	134
   587  0000                     _P07	equ	135
   588  0000                     _P10	equ	144
   589  0000                     _P11	equ	145
   590  0000                     _P12	equ	146
   591  0000                     _P13	equ	147
   592  0000                     _P14	equ	148
   593  0000                     _P15	equ	149
   594  0000                     _P16	equ	150
   595  0000                     _P17	equ	151
   596  0000                     _P20	equ	160
   597  0000                     _P21	equ	161
   598  0000                     _P22	equ	162
   599  0000                     _P23	equ	163
   600  0000                     _P24	equ	164
   601  0000                     _P25	equ	165
   602  0000                     _P26	equ	166
   603  0000                     _P27	equ	167
   604  0000                     _P30	equ	176
   605  0000                     _P31	equ	177
   606  0000                     _P32	equ	178
   607  0000                     _P33	equ	179
   608  0000                     _P34	equ	180
   609  0000                     _P35	equ	181
   610  0000                     _P36	equ	182
   611  0000                     _P37	equ	183
   612  0000                     _PS	equ	188
   613  0000                     _PT0	equ	185
   614  0000                     _PT1	equ	187
   615  0000                     _PX0	equ	184
   616  0000                     _PX1	equ	186
   617  0000                     _RB8	equ	154
   618  0000                     _RD	equ	183
   619  0000                     _REN	equ	156
   620  0000                     _RI	equ	152
   621  0000                     _RS0	equ	211
   622  0000                     _RS1	equ	212
   623  0000                     _RXD	equ	176
   624  0000                     _SM0	equ	159
   625  0000                     _SM1	equ	158
   626  0000                     _SM2	equ	157
   627  0000                     _T0	equ	180
   628  0000                     _T1	equ	181
   629  0000                     _TB8	equ	155
   630  0000                     _TF0	equ	141
   631  0000                     _TF1	equ	143
   632  0000                     _TI	equ	153
   633  0000                     _TR0	equ	140
   634  0000                     _TR1	equ	142
   635  0000                     _TXD	equ	177
   636  0000                     _WR	equ	182
   637  0000                     _ACC	equ	224
   638  0000                     _B	equ	240
   639  0000                     _DPH	equ	131
   640  0000                     _DPL	equ	130
   641  0000                     _IE	equ	168
   642  0000                     _IP	equ	184
   643  0000                     _P0	equ	128
   644  0000                     _P1	equ	144
   645  0000                     _P2	equ	160
   646  0000                     _P3	equ	176
   647  0000                     _PCON	equ	135
   648  0000                     _PSW	equ	208
   649  0000                     _SBUF	equ	153
   650  0000                     _SCON	equ	152
   651  0000                     _SP	equ	129
   652  0000                     _TCON	equ	136
   653  0000                     _TH0	equ	140
   654  0000                     _TH1	equ	141
   655  0000                     _TL0	equ	138
   656  0000                     _TL1	equ	139
   657  0000                     _TMOD	equ	137
   658  0000                     _ACC_BITS	equ	224
   659  0000                     _B_BITS	equ	240
   660  0000                     _IE_BITS	equ	168
   661  0000                     _IP_BITS	equ	184
   662                           	psect	data,class=CODE
   663                           	psect	data
   664                           	global	_MAX
   665  00100                     _MAX:
   666  00100  270F               	dw	(9999)
   667  0000                     _P0_BITS	equ	128
   668  0000                     _P1_BITS	equ	144
   669  0000                     _P2_BITS	equ	160
   670  0000                     _P3_BITS	equ	176
   671  0000                     _PCON_BITS	equ	135
   672  0000                     _PSW_BITS	equ	208
   673  0000                     _SCON_BITS	equ	152
   674  0000                     _TCON_BITS	equ	136
   675  0000                     _TMOD_BITS	equ	137


HI-TECH Software 8051 Macro Assembler V9.60                                Page 2
Symbol Table                                           Fri Apr 22 23:15:27 2016

                ?a_main 00020                       _B 000F0  
                     l2 00136                       l3 00136  
                     l4 0011C                       l5 0010A  
                     _P 000D0                       l6 0010E  
                     l7 00112                       l8 00116  
                     l9 00166                      _B0 000F0  
                    _B1 000F1                      _B2 000F2  
                    _B3 000F3                      _B4 000F4  
                    _B5 000F5                      _B6 000F6  
                    _A8 000A0                      _B7 000F7  
                    _A9 000A1                      _F0 000D5  
                    _AC 000D6                      l10 00150  
                    l11 00166                      l20 00222  
                    l13 00199                      l30 00276  
                    l22 00263                      l14 00180  
                    _EA 000AF                      l31 00274  
                    l23 00261                      l15 00199  
                    l32 0026D                      l24 0022D  
                    l33 00276                      l25 00263  
                    l17 001BC                      l26 00234  
                    l18 00222                      l27 00261  
                    l19 001E6                      _P0 00080  
                    _P1 00090                      l29 0024F  
                    _P2 000A0                      _P3 000B0  
                    _IE 000A8                      _T0 000B4  
                    _T1 000B5                      _ES 000AC  
                    _CY 000D7           _loopAllDigits 00225  
                    _IP 000B8                      _RD 000B7  
                    u10 0014E                      u11 0014C  
                    u20 00158                      _RI 00098  
                    u30 00166                      u31 00164  
                    u40 0017E                      _TI 00099  
                    u41 0017C                      u50 0018B  
                    _PS 000BC                      _OV 000D2  
                    u60 00199                      u61 00197  
                    _SP 00081                      u71 001AD  
                    u80 001E4                      u81 001E2  
                    u90 00212                      u74 001A9  
                    _WR 000B6                  _B_BITS 000F0  
                   _A10 000A2                     _A11 000A3  
                   _A12 000A4                     _A13 000A5  
                   _A14 000A6                     _A15 000A7  
                   _AD0 00080                     _AD1 00081  
                   _AD2 00082                     _AD3 00083  
                   _AD4 00084                     _AD5 00085  
                   _AD6 00086                     _AD7 00087  
                   _ACC 000E0                     _P00 00080  
                   _P01 00081                     _P10 00090  
                   _P02 00082                     _P11 00091  
                   _P03 00083                     _P20 000A0  
                   _P12 00092                     _P04 00084  
                   _P21 000A1                     _P13 00093  
                   _P05 00085                     _P30 000B0  
                   _P22 000A2                     _P14 00094  
                   _P06 00086                     _P31 000B1  
                   _P23 000A3                     _P15 00095  
                   _P07 00087                     _P32 000B2  
                   _P24 000A4                     _P16 00096  
                   _P33 000B3                     _P25 000A5  
                   _P17 00097                     _P34 000B4  
                   _P26 000A6                     _P35 000B5  
                   _P27 000A7                     _P36 000B6  
                   _P37 000B7                     _IE0 00089  
                   _IE1 0008B                     _ET0 000A9  
                   _ET1 000AB                     _EX0 000A8  
                   _EX1 000AA                     _DPH 00083  
                   _DPL 00082                     _IT0 00088  
                   _IT1 0008A                     _RB8 0009A  
                   u100 00222                     u101 00220  
                   u110 0024F                     u120 00261  
                   u121 0025F                     u122 0025B  
                   _TF0 0008D                     _TB8 0009B  
                   _TF1 0008F                     _MAX 00100  
                   _TH0 0008C                     _TH1 0008D  
                   _SM0 0009F                     _SM1 0009E  
                   _TL0 0008A                     _SM2 0009D  
                   _PT0 000B9                     _TL1 0008B  
                   _PT1 000BB                     _RS0 000D3  
                   _RS1 000D4                     _REN 0009C  
                   _PX0 000B8                     _PX1 000BA  
                   _TR0 0008C                     _TR1 0008E  
                   _RXD 000B0                     _PSW 000D0  
                   _TXD 000B1                 _P0_BITS 00080  
               _P1_BITS 00090                 _P2_BITS 000A0  
               _P3_BITS 000B0                 _IE_BITS 000A8  
              _ACC_BITS 000E0         ?a_loopAllDigits 00020  
          _activeDigitN 00102                 _IP_BITS 000B8  
                  f1430 00104                    f1431 00137  
                  f1440 0013B                    f1432 00000  
                  f1441 00167                    f1450 0016B  
                  f1442 00000                    f1451 0019A  
                  f1460 0019E                    f1452 00000  
                  f1461 001BD                    f1470 001C1  
                  f1462 00000                    f1471 00223  
                  f1480 00227                    f1472 00000  
                  f1481 00264                    f1490 00268  
                  f1482 00000                    f1491 00277  
                  f1492 00000                    _ACC0 000E0  
                  _ACC1 000E1                    _ACC2 000E2  
                  _ACC3 000E3                    _ACC4 000E4  
                  _ACC5 000E5                    _ACC6 000E6  
                  _ACC7 000E7                _DIG_CODE 000F5  
         stack_internal 00001                    _INT0 000B2  
                  _INT1 000B3                    _PCON 00087  
           ?a_sleep1sec 00020                    _SCON 00098  
                  _SBUF 00099                    _TCON 00088  
                  _TMOD 00089             ?a_showDigit 00020  
                  _main 00266                    awdiv 00093  
                  awmul 000C3               _sleep1sec 00169  
          ?a_sleep100ms 00020               _showDigit 001BF  
                 l30000 00131                   l30001 00122  
              _PSW_BITS 000D0  ?a_showDigitInPositionN 00022  
        ?a_activeDigitN 00020               _PCON_BITS 00087  
  _showDigitInPositionN 0019C              _sleep100ms 00139  
             _SCON_BITS 00098               _TCON_BITS 00088  
             _TMOD_BITS 00089  
